name: tests
on:
  - push
  - pull_request
jobs: 
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-12, windows-2022]
        python: 
          - version: "3.11"
            toxenv: "py311"

          - version: "3.10"
            toxenv: "py310"
          
          - version: "3.9"
            toxenv: "py39"
          
          - version: "3.8"
            toxenv: "py38"
          
          - version: "3.7"
            toxenv: "py37"
    runs-on: ${{ matrix.os}}
    env:
      PYTHON_SPARK: python
    steps:
      - name: checkout
        uses: actions/checkout@v3
      
      - name: install java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '11'
      
      - name: check Java version
        run: java -version
      
      - name: check PYSPARK_PYTHON env variable
        run: echo "$PYSPARK_PYTHON"

      - name: setup Python
        uses: actions/setup-python@v4
        with: 
          python-version: ${{ matrix.python.version }}
      
      - name: install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox
      
      - name: test with tox
        run: tox -e ${{ matrix.python.toxenv }}
      
      - name: upload coverage to codecov
        if: matrix.python.version == '3.10' 
        uses: codecov/codecov-action@v3

  black:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
      
      - name: setup Python 3.10
        uses: actions/setup-python@v4
        with: 
          python-version: '3.10'
      
      - name: install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox
      
      - name: test with tox
        run: tox -e black

  flake8:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
      
      - name: setup Python 3.10
        uses: actions/setup-python@v4
        with: 
          python-version: '3.10'
      
      - name: install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox
      
      - name: test with tox
        run: tox -e flake8


  build_source_dist:
    name: Build source distribution
    if: startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup Python 3.10
        uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"

      - name: Install build
        run: python -m pip install build

      - name: Run build
        run: python -m build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  build_wheels:
    name: Build wheels
    if: startsWith(github.event.ref, 'refs/tags/v')
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-12]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"

      - name: Install wheel
        run: python -m pip install build wheel

      - name: Build wheels
        run: python -m build --wheel

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.whl 

  publish:
    name: Publish package
    if: startsWith(github.event.ref, 'refs/tags/v')
    needs:
      - test
      - black
      - flake8
      - build_source_dist
      - build_wheels
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist 

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
